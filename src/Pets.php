<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace iCount\iCount;

class Pets 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Create a pet
     * 
     * @return \iCount\iCount\Models\Operations\CreatePetsResponse
     */
	public function createPets(
    ): \iCount\iCount\Models\Operations\CreatePetsResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/pets');
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \iCount\iCount\Models\Operations\CreatePetsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 201) {
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->error = $serializer->deserialize((string)$httpResponse->getBody(), 'iCount\iCount\Models\Shared\Error', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all pets
     * 
     * @param \iCount\iCount\Models\Operations\ListPetsRequest $request
     * @return \iCount\iCount\Models\Operations\ListPetsResponse
     */
	public function listPets(
        ?\iCount\iCount\Models\Operations\ListPetsRequest $request,
    ): \iCount\iCount\Models\Operations\ListPetsResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/pets');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\iCount\iCount\Models\Operations\ListPetsRequest::class, $request, null));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \iCount\iCount\Models\Operations\ListPetsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pets = $serializer->deserialize((string)$httpResponse->getBody(), 'array<iCount\iCount\Models\Shared\Pet>', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->error = $serializer->deserialize((string)$httpResponse->getBody(), 'iCount\iCount\Models\Shared\Error', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Info for a specific pet
     * 
     * @param \iCount\iCount\Models\Operations\ShowPetByIdRequest $request
     * @return \iCount\iCount\Models\Operations\ShowPetByIdResponse
     */
	public function showPetById(
        ?\iCount\iCount\Models\Operations\ShowPetByIdRequest $request,
    ): \iCount\iCount\Models\Operations\ShowPetByIdResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/pets/{petId}', \iCount\iCount\Models\Operations\ShowPetByIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \iCount\iCount\Models\Operations\ShowPetByIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pet = $serializer->deserialize((string)$httpResponse->getBody(), 'iCount\iCount\Models\Shared\Pet', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->error = $serializer->deserialize((string)$httpResponse->getBody(), 'iCount\iCount\Models\Shared\Error', 'json');
            }
        }

        return $response;
    }
}